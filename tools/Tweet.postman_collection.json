{
	"info": {
		"_postman_id": "62869de5-6c47-40eb-b3d1-773e8de81ecd",
		"name": "Tweet",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Auth (REST)",
			"item": [
				{
					"name": "signUp(username, password)",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"req = JSON.parse(pm.request.body.raw)",
									"",
									"pm.environment.set(\"currentUsername\", req.username);",
									"pm.environment.set(\"currentPassword\", req.password);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"{{$randomExampleEmail}}\",\n    \"password\": \"{{$randomPassword}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/auth/signup",
							"host": [
								"{{url}}"
							],
							"path": [
								"auth",
								"signup"
							]
						}
					},
					"response": []
				},
				{
					"name": "signIn(username, password)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.set(\"accessToken\",pm.response.json().accessToken );"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"{{currentUsername}}\",\n    \"password\": \"{{currentPassword}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/auth/signin",
							"host": [
								"{{url}}"
							],
							"path": [
								"auth",
								"signin"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Tweets (REST)",
			"item": [
				{
					"name": "listTweets(user)",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/tweets",
							"host": [
								"{{url}}"
							],
							"path": [
								"tweets"
							]
						}
					},
					"response": []
				},
				{
					"name": "createTweet(message, user)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.set(\"tweetId\",pm.response.json().id );"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"message\": \"{{$randomWords}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/tweets",
							"host": [
								"{{url}}"
							],
							"path": [
								"tweets"
							]
						}
					},
					"response": []
				},
				{
					"name": "getTweet(id, user)",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/tweets/{{tweetId}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"tweets",
								"{{tweetId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "updateTweet(message, user)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"message\": \"{{$randomWords}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/tweets/{{tweetId}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"tweets",
								"{{tweetId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "deleteTweet(id, user)",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/tweets/{{tweetId}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"tweets",
								"{{tweetId}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Tweets (GraphQL)",
			"item": [
				{
					"name": "createTweet(message, user)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.variables.set(\"tweetId\",pm.response.json().data.createTweet.id );"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation createTweet ($message: String!) {\n\tcreateTweet(\n    message: $message\n  ){\n    id\n    message\n    createdAt\n  }\n}",
								"variables": "{\n    \"message\": \"{{$randomWords}}\"\n}"
							},
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "listTweets(user)",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query listTweets {\n  listTweets {\n    id\n    message\n  }\n}",
								"variables": ""
							},
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "getTweet(id, user)",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query getTweet ($tweetId: String!){\n  getTweet (id: $tweetId){\n    id\n    message\n    createdAt\n    updatedAt\n  }\n}\n",
								"variables": "{\n    \"tweetId\": \"{{tweetId}}\"\n}"
							},
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "updateTweet(message, user)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation updateteTweet ($tweetId: String!, $message: String!) {\n\tupdateTweet(\n    id: $tweetId\n    message: $message\n  ){\n    id\n    message\n    createdAt\n    updatedAt\n  }\n}",
								"variables": "{\n    \"tweetId\": \"{{tweetId}}\",\n    \"message\": \"{{$randomWords}}\" \n}"
							},
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "deleteTweet(id, user)",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation deleteTweet ($tweetId: String!) {\n\tdeleteTweet(\n    id: $tweetId\n  ) {id}\n}",
								"variables": "{\n    \"tweetId\": \"{{tweetId}}\"\n}"
							},
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"variable": [
		{
			"key": "currentUsername",
			"value": ""
		},
		{
			"key": "currentPassword",
			"value": ""
		}
	]
}